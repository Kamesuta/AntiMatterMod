buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.4'
        classpath 'org.jetbrains:annotations:13.0'
    }
}

apply plugin: 'forge'
apply plugin: "kotlin"

tasks.withType(Jar) {
    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
//noinspection GroovyUnusedAssignment
sourceCompatibility = "1.8"
//noinspection GroovyUnusedAssignment
targetCompatibility = "1.8"

version = "1.0.0"
group= "TeamAntimatterMod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
//noinspection GroovyUnusedAssignment
archivesBaseName = "AntimatterMod-Core"

minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "eclipse"
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.4'
    embed 'org.jetbrains:annotations:13.0'
    embed 'org.jetbrains.kotlinkoting-stdlib:0.12.613'

    compile fileTree(dir: 'libs', include: '*.jar')

}

jar {
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
